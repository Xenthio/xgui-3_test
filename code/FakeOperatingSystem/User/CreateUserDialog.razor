@using Sandbox.UI
@using XGUI
@using System
@using FakeOperatingSystem

@inherits Window

<root title="Create New User"
	  width="350" height="220"
	  class="createuser-dialog window1"
	  hasclose="false"
	  hasminimise="false"
	  hasmaximise="false">

	<div class="window-content" style="padding: 10px; display: flex; flex-direction: column; gap: 10px;">

		<label>Welcome! To begin, create a user account.</label>
		<label>If you don't want to use user accounts, you can skip this step.</label>

		<div style="flex-direction: column;">
			<div style="align-items:center; margin-bottom:6px;">
				<label for="username" style="width:100px;">User name:</label>
				<TextEntry @ref="UsernameEntry" id="username" style="width:128px;"/>
			</div>
			<div style="align-items:center; margin-bottom:6px;">
				<label for="password" style="width:100px;">Password:</label>
				<TextEntry @ref="PasswordEntry" id="password" type="password" style="width:128px;"/>
			</div>

			<div style="align-items:center; margin-bottom:6px;">
				<label for="confirmPassword" style="width:100px;">Confirm password:</label>
				<TextEntry @ref="ConfirmPasswordEntry" id="confirmPassword" type="password" style="width:128px;"/>
			</div>

		</div>

		<div style="display: flex; flex-direction: row; justify-content: flex-end; gap: 10px; margin-top: auto;">
			<Button class="button" onclick=@HandleCreateUserClick style="min-width:72px;">Create User</Button>
			<Button class="button" onclick=@HandleSkipClick  style="min-width:72px;">Skip</Button>
		</div>
	</div>
</root>

@code {
	private TextEntry UsernameEntry;
	private TextEntry PasswordEntry;
	private TextEntry ConfirmPasswordEntry;

	public Action<string, string> OnCreate { get; set; }
	public Action OnSkip { get; set; }

	public CreateUserDialog()
	{
		// Default constructor
	}

	// Constructor to be called from FakeOSLoader
	public CreateUserDialog(Action<string, string> onCreate, Action onSkip) : this()
	{
		OnCreate = onCreate;
		OnSkip = onSkip;
	}

	private void HandleCreateUserClick()
	{
		string username = UsernameEntry.Text.Trim();
		string password = PasswordEntry.Text;
		string confirmPassword = ConfirmPasswordEntry.Text;

		if (string.IsNullOrWhiteSpace(username))
		{
			// TODO: Show an error message (e.g., a simple XGUI MessageBox)
			Log.Warning("Username cannot be empty.");
			return;
		}

		if (password != confirmPassword)
		{
			// TODO: Show an error message
			Log.Warning("Passwords do not match.");
			return;
		}

		OnCreate?.Invoke(username, password);
		Delete(); // Close the dialog
	}

	private void HandleSkipClick()
	{
		OnSkip?.Invoke();
		Delete(); // Close the dialog
	}
}